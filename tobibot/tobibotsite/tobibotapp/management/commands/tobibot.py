import json
import random
import re
from django.core.management.base import BaseCommand
from django.core.validators import URLValidator
from django.core.exceptions import ValidationError

from tobibotapp.models import Resident, Branch, Building
from telebot import types  # –ü–æ–¥–∫–ª—é—á–∏–ª–∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
from telebot import TeleBot  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –±–æ—Ç

from ._email3 import  send_email

email_confirm_code = None

bot_name = '@BizIncubator71Bot'
with open('api_tokens.json', 'r', encoding='UTF-8') as api_tokens_file:
    api_tokens = json.load(api_tokens_file)
    bot_api_token = api_tokens[bot_name]

bot = TeleBot(bot_api_token)  # –ü–æ–¥–∫–ª—é—á–∏–ª–∏ —Ç–æ–∫–µ–Ω

email_regex = re.compile(
    r'([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\.[A-Z|a-z]{2,})+')
phone_regex = re.compile(
    r'^(\+7|7|8)?[\s\-]?\(?[489][0-9]{2}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}$')


def is_email_valid(email):
    return re.fullmatch(email_regex, email)


def is_phone_valid(phone):
    return re.fullmatch(phone_regex, phone)


class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞'

    def handle(self, *args, **options):

        # print(bot.get_me())
        bot.infinity_polling(
            timeout=10, long_polling_timeout=5)  # –ó–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç


@bot.message_handler(commands=['start'])
def start(message):
    if message.from_user.is_bot:
        return

    resident = Resident.objects.filter(tg_user_id=message.from_user.id)

    if resident.exists():
        bot.send_message(
            message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.')
    else:
        keyboard = types.ReplyKeyboardMarkup(
            row_width=1, one_time_keyboard=True, resize_keyboard=True)

        button_phone = types.KeyboardButton(
            text="–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø", request_contact=True)
        keyboard.add(button_phone)
        text = '''
–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.

–Ø –ø–æ–º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ.

–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <<–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø>> –∏ –¥–∞–π—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –≤–∞—à–∏—Ö –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

–ï—Å–ª–∏ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ Telegram –∑–∞–ø–æ–ª–Ω–µ–Ω –≤–µ—Ä–Ω–æ, —Ç–æ –≤–∞–º –Ω–µ –ø—Ä–∏–¥—ë—Ç—Å—è –≤–≤–æ–¥–∏—Ç—å –∏–º—è, —Ñ–∞–º–∏–ª–∏—é –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤—Ä—É—á–Ω—É—é.

–í–ù–ò–ú–ê–ù–ò–ï! –ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É <<–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø>> –≤—ã –¥–∞—ë—Ç–µ –ì–£ –¢–û "–¢—É–ª—å—Å–∫–∏–π –æ–±–ª–∞—Å—Ç–Ω–æ–π –±–∏–∑–Ω–µ—Å-–∏–Ω–∫—É–±–∞—Ç–æ—Ä" —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –†–§. 
            '''
        bot.send_message(message.chat.id, text, reply_markup=keyboard)

# –û–±—ä—è–≤–∏–ª–∏ –≤–µ—Ç–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –ª–æ–≥–∏–∫—É –Ω–∞ —Ç–æ—Ç —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏—Ç –ø—Ä–∏—Å–ª–∞—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ :)


@bot.message_handler(content_types=['contact'])
def contact(message):
    if message.contact is not None:  # –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç <strong>contact</strong> –Ω–µ —Ä–∞–≤–µ–Ω –Ω—É–ª—é
        text = f'''
–í–∞—à–µ –∏–º—è: {message.contact.first_name}
–í–∞—à–∞ —Ñ–∞–º–∏–ª–∏—è: {message.contact.last_name}
–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {message.contact.phone_number}

–í—Å—ë –≤–µ—Ä–Ω–æ?
        '''
        keyboard = types.InlineKeyboardMarkup()
        # –ü–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ "–î–ê" –ø–µ—Ä–µ–¥–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        button_yes = types.InlineKeyboardButton(
            text='–î–ê', callback_data=message.contact.phone_number)
        # –ü–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ "–ù–ï–¢" –ø–µ—Ä–µ–¥–∞–µ–º
        button_no = types.InlineKeyboardButton(
            text='–ù–ï–¢', callback_data='wrong_contacts')
        keyboard.add(button_yes)
        keyboard.add(button_no)
        bot.send_message(message.chat.id, text, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    if is_phone_valid(call.data):
        # –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Ç–æ —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Resident –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–µ–≥–æ:
        # 1. tg_user_id
        # 2. tg_username
        # 3. first_name
        # 4. last_name
        # 5. phone
        resident = Resident(
            tg_user_id=call.from_user.id,
            tg_username=call.from_user.username,
            first_name=call.from_user.first_name,
            last_name=call.from_user.last_name,
            phone=call.data
        )
        resident.save()
        text = '''
–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ üëçüèª.
–ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ 4/14 üõ´.

–¢–µ–ø–µ—Ä—å —è –ø–æ–ø—Ä–æ—à—É —É –≤–∞—Å –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.

–ò–¥–µ–∞–ª—å–Ω–æ, –µ—Å–ª–∏ —ç—Ç–∞ –ø–æ—á—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º
–≤–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.

–≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –∏–º —É–≤–∏–¥–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –æ–±—É—á–∞—é—â–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –æ–±—Å—É–¥–∏—Ç—å —Å –≤–∞–º–∏ —É—á–∞—Å—Ç–∏–µ –≤ –Ω–∏—Ö.

–ù–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –¥–ª—è –≤–∞—Å –∏ –≤–∞—à–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—á–µ–Ω—å –ø–æ–º–æ–≥—É—Ç –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –∏ –¥–∞–¥—É—Ç –Ω–æ–≤—ã–µ –∏–¥–µ–∏ üí°.

–ò—Ç–∞–∫, –≤–∞—à–∞ –ø–æ—á—Ç–∞:
        '''
        message = bot.send_message(call.message.chat.id, text)
        bot.register_next_step_handler(message, get_email)
    elif call.data == 'wrong_contacts':
        bot.send_message(
            call.message.chat.id, '–í–∏–¥–∏–º–æ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ Telegram –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–µ–≤–µ—Ä–Ω–æ. –°–æ–∂–∞–ª–µ—é, –ø—Ä–∏–¥–µ—Ç—Å—è –≤–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é!')

def get_email(message):
    global email_confirm_code

    # * –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º –¥–ª—è –∞–¥—Ä–µ—Å–æ–≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã
    email = message.text.strip()
    if is_email_valid(email):
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ–≤–µ—Ä–æ—á–Ω—ã–π –∫–æ–¥
        email_confirm_code = str(random.choice(range(1000, 10000)))
        # –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞ Resident –ø–æ tg_user_id
        resident = Resident.objects.filter(tg_user_id=message.from_user.id).first()
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –∏ –∫–æ–¥
        resident.email = email
        resident.email_confirm_code = email_confirm_code
        resident.save()
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ —Å –∫–æ–¥–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        send_email(email, '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã', email_confirm_code)

        text = '''
–û—Ç–ª–∏—á–Ω–æ üëçüèª

–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∞–∑–µ. 

–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –µ—ë –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–º.

–ù–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É —è –æ—Ç–ø—Ä–∞–≤–∏–ª 4-–∑–Ω–∞—á–Ω—ã–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–æ–¥.

–í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:
        '''
        message_reply = bot.send_message(message.chat.id, text)
        bot.register_next_step_handler(message_reply, email_confirm)
    else:
        message_reply = bot.send_message(
            message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ—á—Ç—É –µ—â–µ —Ä–∞–∑:')
        bot.register_next_step_handler(message_reply, get_email)


def email_confirm(message):
    # –ü–æ–ª—É—á–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞ Resident –ø–æ tg_user_id
    resident = Resident.objects.filter(tg_user_id=message.from_user.id).first()
    
    if resident.email_confirm_code == message.text.strip():
        # –ú–µ–Ω—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ—á—Ç—ã –Ω–∞ CONFIRMED
        resident.email_confirm_code = 'CONFIRMED'
        # –û—Ç—Ä–∞–∂–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î
        resident.save()
        text = '''
Email —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑–µ üëçüèª.
–ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ 5/14 üõ´.

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Å–æ—Ü—Å–µ—Ç–∏.

–≠—Ç–∞ —Å—Å—ã–ª–∫–∞  –±—É–¥–µ—Ç –≤–∏–¥–Ω–∞ –¥—Ä—É–≥–∏–º —Ä–µ–∑–∏–¥–µ–Ω—Ç–∞–º –±–∏–∑–Ω–µ—Å-–∏–Ω–∫—É–±–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç "–ö–ê–¢–ê–õ–û–ì".

–¢–∞–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º –∏–∑ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –±–∏–∑–Ω–µ—Å-–∏–Ω–∫—É–±–∞—Ç–æ—Ä–∞ –±—É–¥–µ—Ç –ª–µ–≥—á–µ –ø–æ–Ω—è—Ç—å, —á–µ–º –≤—ã –º–æ–∂–µ—Ç–µ –±—ã—Ç—å –∏–º –ø–æ–ª–µ–∑–Ω—ã.            
        '''
        message_reply = bot.send_message(message.chat.id, text)
        bot.register_next_step_handler(message_reply, get_socials)


def get_socials(message):
    url = message.text.strip()
    print(url)
    
    val = URLValidator()
    try:
        val(url)
    except ValidationError:
        text = '''
–° –≤–∞—à–µ–π —Å—Å—ã–ª–∫–æ–π —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫.
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑
        '''
        message_reply = bot.send_message(message.from_user.id, text)
        bot.register_next_step_handler(message_reply, get_socials)
        return

    resident = Resident.objects.filter(tg_user_id=message.from_user.id).first()
    resident.socials = url
    resident.save()

    text = '''
–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–∞ –≤ –±–∞–∑–µ üëçüèª.
–ü—Ä–æ–≥—Ä–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ 6/14 üõ´.

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–∞—Ç—É –≤–∞—à–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
–ì–ì–ì–ì-–ú–ú-–î–î
–ù–∞–ø—Ä–∏–º–µ—Ä:
1979-04-30
–≠—Ç–æ –±—É–¥–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–æ–≤–∞—Ç—å 30 –∞–ø—Ä–µ–ª—è 1979 –≥–æ–¥–∞
        '''
    message_reply = bot.send_message(message.chat.id, text)
    bot.register_next_step_handler(message_reply, get_birthdate)

def get_birthdate(message):
    birthdate = message.text.strip()
    resident = Resident.objects.filter(tg_user_id=message.from_user.id).first()
    try:
        resident.birthdate=birthdate
        resident.save()
    except ValidationError:
        text = '''
–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ.
–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.
        '''
        message_reply = bot.send_message(message.from_user.id, text)
        bot.register_next_step_handler(message_reply, get_birthdate)
        return
    

